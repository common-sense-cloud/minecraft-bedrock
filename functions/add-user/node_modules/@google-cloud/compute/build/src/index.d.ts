import * as v1 from './v1';
import * as v1small from './v1small';
declare const AcceleratorTypesClient: typeof v1.AcceleratorTypesClient;
type AcceleratorTypesClient = v1.AcceleratorTypesClient;
declare const AddressesClient: typeof v1.AddressesClient;
type AddressesClient = v1.AddressesClient;
declare const AutoscalersClient: typeof v1.AutoscalersClient;
type AutoscalersClient = v1.AutoscalersClient;
declare const BackendBucketsClient: typeof v1.BackendBucketsClient;
type BackendBucketsClient = v1.BackendBucketsClient;
declare const BackendServicesClient: typeof v1.BackendServicesClient;
type BackendServicesClient = v1.BackendServicesClient;
declare const DisksClient: typeof v1.DisksClient;
type DisksClient = v1.DisksClient;
declare const DiskTypesClient: typeof v1.DiskTypesClient;
type DiskTypesClient = v1.DiskTypesClient;
declare const ExternalVpnGatewaysClient: typeof v1.ExternalVpnGatewaysClient;
type ExternalVpnGatewaysClient = v1.ExternalVpnGatewaysClient;
declare const FirewallPoliciesClient: typeof v1.FirewallPoliciesClient;
type FirewallPoliciesClient = v1.FirewallPoliciesClient;
declare const FirewallsClient: typeof v1.FirewallsClient;
type FirewallsClient = v1.FirewallsClient;
declare const ForwardingRulesClient: typeof v1.ForwardingRulesClient;
type ForwardingRulesClient = v1.ForwardingRulesClient;
declare const GlobalAddressesClient: typeof v1.GlobalAddressesClient;
type GlobalAddressesClient = v1.GlobalAddressesClient;
declare const GlobalForwardingRulesClient: typeof v1.GlobalForwardingRulesClient;
type GlobalForwardingRulesClient = v1.GlobalForwardingRulesClient;
declare const GlobalNetworkEndpointGroupsClient: typeof v1.GlobalNetworkEndpointGroupsClient;
type GlobalNetworkEndpointGroupsClient = v1.GlobalNetworkEndpointGroupsClient;
declare const GlobalOperationsClient: typeof v1.GlobalOperationsClient;
type GlobalOperationsClient = v1.GlobalOperationsClient;
declare const GlobalOrganizationOperationsClient: typeof v1.GlobalOrganizationOperationsClient;
type GlobalOrganizationOperationsClient = v1.GlobalOrganizationOperationsClient;
declare const GlobalPublicDelegatedPrefixesClient: typeof v1.GlobalPublicDelegatedPrefixesClient;
type GlobalPublicDelegatedPrefixesClient = v1.GlobalPublicDelegatedPrefixesClient;
declare const HealthChecksClient: typeof v1.HealthChecksClient;
type HealthChecksClient = v1.HealthChecksClient;
declare const ImageFamilyViewsClient: typeof v1.ImageFamilyViewsClient;
type ImageFamilyViewsClient = v1.ImageFamilyViewsClient;
declare const ImagesClient: typeof v1.ImagesClient;
type ImagesClient = v1.ImagesClient;
declare const InstanceGroupManagersClient: typeof v1.InstanceGroupManagersClient;
type InstanceGroupManagersClient = v1.InstanceGroupManagersClient;
declare const InstanceGroupsClient: typeof v1.InstanceGroupsClient;
type InstanceGroupsClient = v1.InstanceGroupsClient;
declare const InstancesClient: typeof v1.InstancesClient;
type InstancesClient = v1.InstancesClient;
declare const InstanceTemplatesClient: typeof v1.InstanceTemplatesClient;
type InstanceTemplatesClient = v1.InstanceTemplatesClient;
declare const InterconnectAttachmentsClient: typeof v1.InterconnectAttachmentsClient;
type InterconnectAttachmentsClient = v1.InterconnectAttachmentsClient;
declare const InterconnectLocationsClient: typeof v1.InterconnectLocationsClient;
type InterconnectLocationsClient = v1.InterconnectLocationsClient;
declare const InterconnectRemoteLocationsClient: typeof v1.InterconnectRemoteLocationsClient;
type InterconnectRemoteLocationsClient = v1.InterconnectRemoteLocationsClient;
declare const InterconnectsClient: typeof v1.InterconnectsClient;
type InterconnectsClient = v1.InterconnectsClient;
declare const LicenseCodesClient: typeof v1.LicenseCodesClient;
type LicenseCodesClient = v1.LicenseCodesClient;
declare const LicensesClient: typeof v1.LicensesClient;
type LicensesClient = v1.LicensesClient;
declare const MachineImagesClient: typeof v1.MachineImagesClient;
type MachineImagesClient = v1.MachineImagesClient;
declare const MachineTypesClient: typeof v1.MachineTypesClient;
type MachineTypesClient = v1.MachineTypesClient;
declare const NetworkAttachmentsClient: typeof v1.NetworkAttachmentsClient;
type NetworkAttachmentsClient = v1.NetworkAttachmentsClient;
declare const NetworkEdgeSecurityServicesClient: typeof v1.NetworkEdgeSecurityServicesClient;
type NetworkEdgeSecurityServicesClient = v1.NetworkEdgeSecurityServicesClient;
declare const NetworkEndpointGroupsClient: typeof v1.NetworkEndpointGroupsClient;
type NetworkEndpointGroupsClient = v1.NetworkEndpointGroupsClient;
declare const NetworkFirewallPoliciesClient: typeof v1.NetworkFirewallPoliciesClient;
type NetworkFirewallPoliciesClient = v1.NetworkFirewallPoliciesClient;
declare const NetworksClient: typeof v1.NetworksClient;
type NetworksClient = v1.NetworksClient;
declare const NodeGroupsClient: typeof v1.NodeGroupsClient;
type NodeGroupsClient = v1.NodeGroupsClient;
declare const NodeTemplatesClient: typeof v1.NodeTemplatesClient;
type NodeTemplatesClient = v1.NodeTemplatesClient;
declare const NodeTypesClient: typeof v1.NodeTypesClient;
type NodeTypesClient = v1.NodeTypesClient;
declare const PacketMirroringsClient: typeof v1.PacketMirroringsClient;
type PacketMirroringsClient = v1.PacketMirroringsClient;
declare const ProjectsClient: typeof v1.ProjectsClient;
type ProjectsClient = v1.ProjectsClient;
declare const PublicAdvertisedPrefixesClient: typeof v1.PublicAdvertisedPrefixesClient;
type PublicAdvertisedPrefixesClient = v1.PublicAdvertisedPrefixesClient;
declare const PublicDelegatedPrefixesClient: typeof v1.PublicDelegatedPrefixesClient;
type PublicDelegatedPrefixesClient = v1.PublicDelegatedPrefixesClient;
declare const RegionAutoscalersClient: typeof v1.RegionAutoscalersClient;
type RegionAutoscalersClient = v1.RegionAutoscalersClient;
declare const RegionBackendServicesClient: typeof v1.RegionBackendServicesClient;
type RegionBackendServicesClient = v1.RegionBackendServicesClient;
declare const RegionCommitmentsClient: typeof v1.RegionCommitmentsClient;
type RegionCommitmentsClient = v1.RegionCommitmentsClient;
declare const RegionDisksClient: typeof v1.RegionDisksClient;
type RegionDisksClient = v1.RegionDisksClient;
declare const RegionDiskTypesClient: typeof v1.RegionDiskTypesClient;
type RegionDiskTypesClient = v1.RegionDiskTypesClient;
declare const RegionHealthChecksClient: typeof v1.RegionHealthChecksClient;
type RegionHealthChecksClient = v1.RegionHealthChecksClient;
declare const RegionHealthCheckServicesClient: typeof v1.RegionHealthCheckServicesClient;
type RegionHealthCheckServicesClient = v1.RegionHealthCheckServicesClient;
declare const RegionInstanceGroupManagersClient: typeof v1.RegionInstanceGroupManagersClient;
type RegionInstanceGroupManagersClient = v1.RegionInstanceGroupManagersClient;
declare const RegionInstanceGroupsClient: typeof v1.RegionInstanceGroupsClient;
type RegionInstanceGroupsClient = v1.RegionInstanceGroupsClient;
declare const RegionInstancesClient: typeof v1.RegionInstancesClient;
type RegionInstancesClient = v1.RegionInstancesClient;
declare const RegionInstanceTemplatesClient: typeof v1.RegionInstanceTemplatesClient;
type RegionInstanceTemplatesClient = v1.RegionInstanceTemplatesClient;
declare const RegionNetworkEndpointGroupsClient: typeof v1.RegionNetworkEndpointGroupsClient;
type RegionNetworkEndpointGroupsClient = v1.RegionNetworkEndpointGroupsClient;
declare const RegionNetworkFirewallPoliciesClient: typeof v1.RegionNetworkFirewallPoliciesClient;
type RegionNetworkFirewallPoliciesClient = v1.RegionNetworkFirewallPoliciesClient;
declare const RegionNotificationEndpointsClient: typeof v1.RegionNotificationEndpointsClient;
type RegionNotificationEndpointsClient = v1.RegionNotificationEndpointsClient;
declare const RegionOperationsClient: typeof v1.RegionOperationsClient;
type RegionOperationsClient = v1.RegionOperationsClient;
declare const RegionsClient: typeof v1.RegionsClient;
type RegionsClient = v1.RegionsClient;
declare const RegionSecurityPoliciesClient: typeof v1.RegionSecurityPoliciesClient;
type RegionSecurityPoliciesClient = v1.RegionSecurityPoliciesClient;
declare const RegionSslCertificatesClient: typeof v1.RegionSslCertificatesClient;
type RegionSslCertificatesClient = v1.RegionSslCertificatesClient;
declare const RegionSslPoliciesClient: typeof v1.RegionSslPoliciesClient;
type RegionSslPoliciesClient = v1.RegionSslPoliciesClient;
declare const RegionTargetHttpProxiesClient: typeof v1.RegionTargetHttpProxiesClient;
type RegionTargetHttpProxiesClient = v1.RegionTargetHttpProxiesClient;
declare const RegionTargetHttpsProxiesClient: typeof v1.RegionTargetHttpsProxiesClient;
type RegionTargetHttpsProxiesClient = v1.RegionTargetHttpsProxiesClient;
declare const RegionTargetTcpProxiesClient: typeof v1.RegionTargetTcpProxiesClient;
type RegionTargetTcpProxiesClient = v1.RegionTargetTcpProxiesClient;
declare const RegionUrlMapsClient: typeof v1.RegionUrlMapsClient;
type RegionUrlMapsClient = v1.RegionUrlMapsClient;
declare const ReservationsClient: typeof v1.ReservationsClient;
type ReservationsClient = v1.ReservationsClient;
declare const ResourcePoliciesClient: typeof v1.ResourcePoliciesClient;
type ResourcePoliciesClient = v1.ResourcePoliciesClient;
declare const RoutersClient: typeof v1.RoutersClient;
type RoutersClient = v1.RoutersClient;
declare const RoutesClient: typeof v1.RoutesClient;
type RoutesClient = v1.RoutesClient;
declare const SecurityPoliciesClient: typeof v1.SecurityPoliciesClient;
type SecurityPoliciesClient = v1.SecurityPoliciesClient;
declare const ServiceAttachmentsClient: typeof v1.ServiceAttachmentsClient;
type ServiceAttachmentsClient = v1.ServiceAttachmentsClient;
declare const SnapshotsClient: typeof v1.SnapshotsClient;
type SnapshotsClient = v1.SnapshotsClient;
declare const SslCertificatesClient: typeof v1.SslCertificatesClient;
type SslCertificatesClient = v1.SslCertificatesClient;
declare const SslPoliciesClient: typeof v1.SslPoliciesClient;
type SslPoliciesClient = v1.SslPoliciesClient;
declare const SubnetworksClient: typeof v1.SubnetworksClient;
type SubnetworksClient = v1.SubnetworksClient;
declare const TargetGrpcProxiesClient: typeof v1.TargetGrpcProxiesClient;
type TargetGrpcProxiesClient = v1.TargetGrpcProxiesClient;
declare const TargetHttpProxiesClient: typeof v1.TargetHttpProxiesClient;
type TargetHttpProxiesClient = v1.TargetHttpProxiesClient;
declare const TargetHttpsProxiesClient: typeof v1.TargetHttpsProxiesClient;
type TargetHttpsProxiesClient = v1.TargetHttpsProxiesClient;
declare const TargetInstancesClient: typeof v1.TargetInstancesClient;
type TargetInstancesClient = v1.TargetInstancesClient;
declare const TargetPoolsClient: typeof v1.TargetPoolsClient;
type TargetPoolsClient = v1.TargetPoolsClient;
declare const TargetSslProxiesClient: typeof v1.TargetSslProxiesClient;
type TargetSslProxiesClient = v1.TargetSslProxiesClient;
declare const TargetTcpProxiesClient: typeof v1.TargetTcpProxiesClient;
type TargetTcpProxiesClient = v1.TargetTcpProxiesClient;
declare const TargetVpnGatewaysClient: typeof v1.TargetVpnGatewaysClient;
type TargetVpnGatewaysClient = v1.TargetVpnGatewaysClient;
declare const UrlMapsClient: typeof v1.UrlMapsClient;
type UrlMapsClient = v1.UrlMapsClient;
declare const VpnGatewaysClient: typeof v1.VpnGatewaysClient;
type VpnGatewaysClient = v1.VpnGatewaysClient;
declare const VpnTunnelsClient: typeof v1.VpnTunnelsClient;
type VpnTunnelsClient = v1.VpnTunnelsClient;
declare const ZoneOperationsClient: typeof v1.ZoneOperationsClient;
type ZoneOperationsClient = v1.ZoneOperationsClient;
declare const ZonesClient: typeof v1.ZonesClient;
type ZonesClient = v1.ZonesClient;
export { v1, v1small, AcceleratorTypesClient, AddressesClient, AutoscalersClient, BackendBucketsClient, BackendServicesClient, DisksClient, DiskTypesClient, ExternalVpnGatewaysClient, FirewallPoliciesClient, FirewallsClient, ForwardingRulesClient, GlobalAddressesClient, GlobalForwardingRulesClient, GlobalNetworkEndpointGroupsClient, GlobalOperationsClient, GlobalOrganizationOperationsClient, GlobalPublicDelegatedPrefixesClient, HealthChecksClient, ImageFamilyViewsClient, ImagesClient, InstanceGroupManagersClient, InstanceGroupsClient, InstancesClient, InstanceTemplatesClient, InterconnectAttachmentsClient, InterconnectLocationsClient, InterconnectRemoteLocationsClient, InterconnectsClient, LicenseCodesClient, LicensesClient, MachineImagesClient, MachineTypesClient, NetworkAttachmentsClient, NetworkEdgeSecurityServicesClient, NetworkEndpointGroupsClient, NetworkFirewallPoliciesClient, NetworksClient, NodeGroupsClient, NodeTemplatesClient, NodeTypesClient, PacketMirroringsClient, ProjectsClient, PublicAdvertisedPrefixesClient, PublicDelegatedPrefixesClient, RegionAutoscalersClient, RegionBackendServicesClient, RegionCommitmentsClient, RegionDisksClient, RegionDiskTypesClient, RegionHealthChecksClient, RegionHealthCheckServicesClient, RegionInstanceGroupManagersClient, RegionInstanceGroupsClient, RegionInstancesClient, RegionInstanceTemplatesClient, RegionNetworkEndpointGroupsClient, RegionNetworkFirewallPoliciesClient, RegionNotificationEndpointsClient, RegionOperationsClient, RegionsClient, RegionSecurityPoliciesClient, RegionSslCertificatesClient, RegionSslPoliciesClient, RegionTargetHttpProxiesClient, RegionTargetHttpsProxiesClient, RegionTargetTcpProxiesClient, RegionUrlMapsClient, ReservationsClient, ResourcePoliciesClient, RoutersClient, RoutesClient, SecurityPoliciesClient, ServiceAttachmentsClient, SnapshotsClient, SslCertificatesClient, SslPoliciesClient, SubnetworksClient, TargetGrpcProxiesClient, TargetHttpProxiesClient, TargetHttpsProxiesClient, TargetInstancesClient, TargetPoolsClient, TargetSslProxiesClient, TargetTcpProxiesClient, TargetVpnGatewaysClient, UrlMapsClient, VpnGatewaysClient, VpnTunnelsClient, ZoneOperationsClient, ZonesClient, };
declare const _default: {
    v1: typeof v1;
    v1small: typeof v1small;
    AcceleratorTypesClient: typeof v1.AcceleratorTypesClient;
    AddressesClient: typeof v1.AddressesClient;
    AutoscalersClient: typeof v1.AutoscalersClient;
    BackendBucketsClient: typeof v1.BackendBucketsClient;
    BackendServicesClient: typeof v1.BackendServicesClient;
    DisksClient: typeof v1.DisksClient;
    DiskTypesClient: typeof v1.DiskTypesClient;
    ExternalVpnGatewaysClient: typeof v1.ExternalVpnGatewaysClient;
    FirewallPoliciesClient: typeof v1.FirewallPoliciesClient;
    FirewallsClient: typeof v1.FirewallsClient;
    ForwardingRulesClient: typeof v1.ForwardingRulesClient;
    GlobalAddressesClient: typeof v1.GlobalAddressesClient;
    GlobalForwardingRulesClient: typeof v1.GlobalForwardingRulesClient;
    GlobalNetworkEndpointGroupsClient: typeof v1.GlobalNetworkEndpointGroupsClient;
    GlobalOperationsClient: typeof v1.GlobalOperationsClient;
    GlobalOrganizationOperationsClient: typeof v1.GlobalOrganizationOperationsClient;
    GlobalPublicDelegatedPrefixesClient: typeof v1.GlobalPublicDelegatedPrefixesClient;
    HealthChecksClient: typeof v1.HealthChecksClient;
    ImageFamilyViewsClient: typeof v1.ImageFamilyViewsClient;
    ImagesClient: typeof v1.ImagesClient;
    InstanceGroupManagersClient: typeof v1.InstanceGroupManagersClient;
    InstanceGroupsClient: typeof v1.InstanceGroupsClient;
    InstancesClient: typeof v1.InstancesClient;
    InstanceTemplatesClient: typeof v1.InstanceTemplatesClient;
    InterconnectAttachmentsClient: typeof v1.InterconnectAttachmentsClient;
    InterconnectLocationsClient: typeof v1.InterconnectLocationsClient;
    InterconnectRemoteLocationsClient: typeof v1.InterconnectRemoteLocationsClient;
    InterconnectsClient: typeof v1.InterconnectsClient;
    LicenseCodesClient: typeof v1.LicenseCodesClient;
    LicensesClient: typeof v1.LicensesClient;
    MachineImagesClient: typeof v1.MachineImagesClient;
    MachineTypesClient: typeof v1.MachineTypesClient;
    NetworkAttachmentsClient: typeof v1.NetworkAttachmentsClient;
    NetworkEdgeSecurityServicesClient: typeof v1.NetworkEdgeSecurityServicesClient;
    NetworkEndpointGroupsClient: typeof v1.NetworkEndpointGroupsClient;
    NetworkFirewallPoliciesClient: typeof v1.NetworkFirewallPoliciesClient;
    NetworksClient: typeof v1.NetworksClient;
    NodeGroupsClient: typeof v1.NodeGroupsClient;
    NodeTemplatesClient: typeof v1.NodeTemplatesClient;
    NodeTypesClient: typeof v1.NodeTypesClient;
    PacketMirroringsClient: typeof v1.PacketMirroringsClient;
    ProjectsClient: typeof v1.ProjectsClient;
    PublicAdvertisedPrefixesClient: typeof v1.PublicAdvertisedPrefixesClient;
    PublicDelegatedPrefixesClient: typeof v1.PublicDelegatedPrefixesClient;
    RegionAutoscalersClient: typeof v1.RegionAutoscalersClient;
    RegionBackendServicesClient: typeof v1.RegionBackendServicesClient;
    RegionCommitmentsClient: typeof v1.RegionCommitmentsClient;
    RegionDisksClient: typeof v1.RegionDisksClient;
    RegionDiskTypesClient: typeof v1.RegionDiskTypesClient;
    RegionHealthChecksClient: typeof v1.RegionHealthChecksClient;
    RegionHealthCheckServicesClient: typeof v1.RegionHealthCheckServicesClient;
    RegionInstanceGroupManagersClient: typeof v1.RegionInstanceGroupManagersClient;
    RegionInstanceGroupsClient: typeof v1.RegionInstanceGroupsClient;
    RegionInstancesClient: typeof v1.RegionInstancesClient;
    RegionInstanceTemplatesClient: typeof v1.RegionInstanceTemplatesClient;
    RegionNetworkEndpointGroupsClient: typeof v1.RegionNetworkEndpointGroupsClient;
    RegionNetworkFirewallPoliciesClient: typeof v1.RegionNetworkFirewallPoliciesClient;
    RegionNotificationEndpointsClient: typeof v1.RegionNotificationEndpointsClient;
    RegionOperationsClient: typeof v1.RegionOperationsClient;
    RegionsClient: typeof v1.RegionsClient;
    RegionSecurityPoliciesClient: typeof v1.RegionSecurityPoliciesClient;
    RegionSslCertificatesClient: typeof v1.RegionSslCertificatesClient;
    RegionSslPoliciesClient: typeof v1.RegionSslPoliciesClient;
    RegionTargetHttpProxiesClient: typeof v1.RegionTargetHttpProxiesClient;
    RegionTargetHttpsProxiesClient: typeof v1.RegionTargetHttpsProxiesClient;
    RegionTargetTcpProxiesClient: typeof v1.RegionTargetTcpProxiesClient;
    RegionUrlMapsClient: typeof v1.RegionUrlMapsClient;
    ReservationsClient: typeof v1.ReservationsClient;
    ResourcePoliciesClient: typeof v1.ResourcePoliciesClient;
    RoutersClient: typeof v1.RoutersClient;
    RoutesClient: typeof v1.RoutesClient;
    SecurityPoliciesClient: typeof v1.SecurityPoliciesClient;
    ServiceAttachmentsClient: typeof v1.ServiceAttachmentsClient;
    SnapshotsClient: typeof v1.SnapshotsClient;
    SslCertificatesClient: typeof v1.SslCertificatesClient;
    SslPoliciesClient: typeof v1.SslPoliciesClient;
    SubnetworksClient: typeof v1.SubnetworksClient;
    TargetGrpcProxiesClient: typeof v1.TargetGrpcProxiesClient;
    TargetHttpProxiesClient: typeof v1.TargetHttpProxiesClient;
    TargetHttpsProxiesClient: typeof v1.TargetHttpsProxiesClient;
    TargetInstancesClient: typeof v1.TargetInstancesClient;
    TargetPoolsClient: typeof v1.TargetPoolsClient;
    TargetSslProxiesClient: typeof v1.TargetSslProxiesClient;
    TargetTcpProxiesClient: typeof v1.TargetTcpProxiesClient;
    TargetVpnGatewaysClient: typeof v1.TargetVpnGatewaysClient;
    UrlMapsClient: typeof v1.UrlMapsClient;
    VpnGatewaysClient: typeof v1.VpnGatewaysClient;
    VpnTunnelsClient: typeof v1.VpnTunnelsClient;
    ZoneOperationsClient: typeof v1.ZoneOperationsClient;
    ZonesClient: typeof v1.ZonesClient;
};
export default _default;
import * as protos from '../protos/protos';
export { protos };
