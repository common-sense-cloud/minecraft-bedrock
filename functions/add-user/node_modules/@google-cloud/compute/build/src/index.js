"use strict";
// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by synthtool. **
// ** https://github.com/googleapis/synthtool **
// ** All changes to this file may be overwritten. **
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegionDisksClient = exports.RegionCommitmentsClient = exports.RegionBackendServicesClient = exports.RegionAutoscalersClient = exports.PublicDelegatedPrefixesClient = exports.PublicAdvertisedPrefixesClient = exports.ProjectsClient = exports.PacketMirroringsClient = exports.NodeTypesClient = exports.NodeTemplatesClient = exports.NodeGroupsClient = exports.NetworksClient = exports.NetworkFirewallPoliciesClient = exports.NetworkEndpointGroupsClient = exports.NetworkEdgeSecurityServicesClient = exports.NetworkAttachmentsClient = exports.MachineTypesClient = exports.MachineImagesClient = exports.LicensesClient = exports.LicenseCodesClient = exports.InterconnectsClient = exports.InterconnectRemoteLocationsClient = exports.InterconnectLocationsClient = exports.InterconnectAttachmentsClient = exports.InstanceTemplatesClient = exports.InstancesClient = exports.InstanceGroupsClient = exports.InstanceGroupManagersClient = exports.ImagesClient = exports.ImageFamilyViewsClient = exports.HealthChecksClient = exports.GlobalPublicDelegatedPrefixesClient = exports.GlobalOrganizationOperationsClient = exports.GlobalOperationsClient = exports.GlobalNetworkEndpointGroupsClient = exports.GlobalForwardingRulesClient = exports.GlobalAddressesClient = exports.ForwardingRulesClient = exports.FirewallsClient = exports.FirewallPoliciesClient = exports.ExternalVpnGatewaysClient = exports.DiskTypesClient = exports.DisksClient = exports.BackendServicesClient = exports.BackendBucketsClient = exports.AutoscalersClient = exports.AddressesClient = exports.AcceleratorTypesClient = exports.v1small = exports.v1 = void 0;
exports.protos = exports.ZonesClient = exports.ZoneOperationsClient = exports.VpnTunnelsClient = exports.VpnGatewaysClient = exports.UrlMapsClient = exports.TargetVpnGatewaysClient = exports.TargetTcpProxiesClient = exports.TargetSslProxiesClient = exports.TargetPoolsClient = exports.TargetInstancesClient = exports.TargetHttpsProxiesClient = exports.TargetHttpProxiesClient = exports.TargetGrpcProxiesClient = exports.SubnetworksClient = exports.SslPoliciesClient = exports.SslCertificatesClient = exports.SnapshotsClient = exports.ServiceAttachmentsClient = exports.SecurityPoliciesClient = exports.RoutesClient = exports.RoutersClient = exports.ResourcePoliciesClient = exports.ReservationsClient = exports.RegionUrlMapsClient = exports.RegionTargetTcpProxiesClient = exports.RegionTargetHttpsProxiesClient = exports.RegionTargetHttpProxiesClient = exports.RegionSslPoliciesClient = exports.RegionSslCertificatesClient = exports.RegionSecurityPoliciesClient = exports.RegionsClient = exports.RegionOperationsClient = exports.RegionNotificationEndpointsClient = exports.RegionNetworkFirewallPoliciesClient = exports.RegionNetworkEndpointGroupsClient = exports.RegionInstanceTemplatesClient = exports.RegionInstancesClient = exports.RegionInstanceGroupsClient = exports.RegionInstanceGroupManagersClient = exports.RegionHealthCheckServicesClient = exports.RegionHealthChecksClient = exports.RegionDiskTypesClient = void 0;
const v1 = require("./v1");
exports.v1 = v1;
const v1small = require("./v1small");
exports.v1small = v1small;
const AcceleratorTypesClient = v1.AcceleratorTypesClient;
exports.AcceleratorTypesClient = AcceleratorTypesClient;
const AddressesClient = v1.AddressesClient;
exports.AddressesClient = AddressesClient;
const AutoscalersClient = v1.AutoscalersClient;
exports.AutoscalersClient = AutoscalersClient;
const BackendBucketsClient = v1.BackendBucketsClient;
exports.BackendBucketsClient = BackendBucketsClient;
const BackendServicesClient = v1.BackendServicesClient;
exports.BackendServicesClient = BackendServicesClient;
const DisksClient = v1.DisksClient;
exports.DisksClient = DisksClient;
const DiskTypesClient = v1.DiskTypesClient;
exports.DiskTypesClient = DiskTypesClient;
const ExternalVpnGatewaysClient = v1.ExternalVpnGatewaysClient;
exports.ExternalVpnGatewaysClient = ExternalVpnGatewaysClient;
const FirewallPoliciesClient = v1.FirewallPoliciesClient;
exports.FirewallPoliciesClient = FirewallPoliciesClient;
const FirewallsClient = v1.FirewallsClient;
exports.FirewallsClient = FirewallsClient;
const ForwardingRulesClient = v1.ForwardingRulesClient;
exports.ForwardingRulesClient = ForwardingRulesClient;
const GlobalAddressesClient = v1.GlobalAddressesClient;
exports.GlobalAddressesClient = GlobalAddressesClient;
const GlobalForwardingRulesClient = v1.GlobalForwardingRulesClient;
exports.GlobalForwardingRulesClient = GlobalForwardingRulesClient;
const GlobalNetworkEndpointGroupsClient = v1.GlobalNetworkEndpointGroupsClient;
exports.GlobalNetworkEndpointGroupsClient = GlobalNetworkEndpointGroupsClient;
const GlobalOperationsClient = v1.GlobalOperationsClient;
exports.GlobalOperationsClient = GlobalOperationsClient;
const GlobalOrganizationOperationsClient = v1.GlobalOrganizationOperationsClient;
exports.GlobalOrganizationOperationsClient = GlobalOrganizationOperationsClient;
const GlobalPublicDelegatedPrefixesClient = v1.GlobalPublicDelegatedPrefixesClient;
exports.GlobalPublicDelegatedPrefixesClient = GlobalPublicDelegatedPrefixesClient;
const HealthChecksClient = v1.HealthChecksClient;
exports.HealthChecksClient = HealthChecksClient;
const ImageFamilyViewsClient = v1.ImageFamilyViewsClient;
exports.ImageFamilyViewsClient = ImageFamilyViewsClient;
const ImagesClient = v1.ImagesClient;
exports.ImagesClient = ImagesClient;
const InstanceGroupManagersClient = v1.InstanceGroupManagersClient;
exports.InstanceGroupManagersClient = InstanceGroupManagersClient;
const InstanceGroupsClient = v1.InstanceGroupsClient;
exports.InstanceGroupsClient = InstanceGroupsClient;
const InstancesClient = v1.InstancesClient;
exports.InstancesClient = InstancesClient;
const InstanceTemplatesClient = v1.InstanceTemplatesClient;
exports.InstanceTemplatesClient = InstanceTemplatesClient;
const InterconnectAttachmentsClient = v1.InterconnectAttachmentsClient;
exports.InterconnectAttachmentsClient = InterconnectAttachmentsClient;
const InterconnectLocationsClient = v1.InterconnectLocationsClient;
exports.InterconnectLocationsClient = InterconnectLocationsClient;
const InterconnectRemoteLocationsClient = v1.InterconnectRemoteLocationsClient;
exports.InterconnectRemoteLocationsClient = InterconnectRemoteLocationsClient;
const InterconnectsClient = v1.InterconnectsClient;
exports.InterconnectsClient = InterconnectsClient;
const LicenseCodesClient = v1.LicenseCodesClient;
exports.LicenseCodesClient = LicenseCodesClient;
const LicensesClient = v1.LicensesClient;
exports.LicensesClient = LicensesClient;
const MachineImagesClient = v1.MachineImagesClient;
exports.MachineImagesClient = MachineImagesClient;
const MachineTypesClient = v1.MachineTypesClient;
exports.MachineTypesClient = MachineTypesClient;
const NetworkAttachmentsClient = v1.NetworkAttachmentsClient;
exports.NetworkAttachmentsClient = NetworkAttachmentsClient;
const NetworkEdgeSecurityServicesClient = v1.NetworkEdgeSecurityServicesClient;
exports.NetworkEdgeSecurityServicesClient = NetworkEdgeSecurityServicesClient;
const NetworkEndpointGroupsClient = v1.NetworkEndpointGroupsClient;
exports.NetworkEndpointGroupsClient = NetworkEndpointGroupsClient;
const NetworkFirewallPoliciesClient = v1.NetworkFirewallPoliciesClient;
exports.NetworkFirewallPoliciesClient = NetworkFirewallPoliciesClient;
const NetworksClient = v1.NetworksClient;
exports.NetworksClient = NetworksClient;
const NodeGroupsClient = v1.NodeGroupsClient;
exports.NodeGroupsClient = NodeGroupsClient;
const NodeTemplatesClient = v1.NodeTemplatesClient;
exports.NodeTemplatesClient = NodeTemplatesClient;
const NodeTypesClient = v1.NodeTypesClient;
exports.NodeTypesClient = NodeTypesClient;
const PacketMirroringsClient = v1.PacketMirroringsClient;
exports.PacketMirroringsClient = PacketMirroringsClient;
const ProjectsClient = v1.ProjectsClient;
exports.ProjectsClient = ProjectsClient;
const PublicAdvertisedPrefixesClient = v1.PublicAdvertisedPrefixesClient;
exports.PublicAdvertisedPrefixesClient = PublicAdvertisedPrefixesClient;
const PublicDelegatedPrefixesClient = v1.PublicDelegatedPrefixesClient;
exports.PublicDelegatedPrefixesClient = PublicDelegatedPrefixesClient;
const RegionAutoscalersClient = v1.RegionAutoscalersClient;
exports.RegionAutoscalersClient = RegionAutoscalersClient;
const RegionBackendServicesClient = v1.RegionBackendServicesClient;
exports.RegionBackendServicesClient = RegionBackendServicesClient;
const RegionCommitmentsClient = v1.RegionCommitmentsClient;
exports.RegionCommitmentsClient = RegionCommitmentsClient;
const RegionDisksClient = v1.RegionDisksClient;
exports.RegionDisksClient = RegionDisksClient;
const RegionDiskTypesClient = v1.RegionDiskTypesClient;
exports.RegionDiskTypesClient = RegionDiskTypesClient;
const RegionHealthChecksClient = v1.RegionHealthChecksClient;
exports.RegionHealthChecksClient = RegionHealthChecksClient;
const RegionHealthCheckServicesClient = v1.RegionHealthCheckServicesClient;
exports.RegionHealthCheckServicesClient = RegionHealthCheckServicesClient;
const RegionInstanceGroupManagersClient = v1.RegionInstanceGroupManagersClient;
exports.RegionInstanceGroupManagersClient = RegionInstanceGroupManagersClient;
const RegionInstanceGroupsClient = v1.RegionInstanceGroupsClient;
exports.RegionInstanceGroupsClient = RegionInstanceGroupsClient;
const RegionInstancesClient = v1.RegionInstancesClient;
exports.RegionInstancesClient = RegionInstancesClient;
const RegionInstanceTemplatesClient = v1.RegionInstanceTemplatesClient;
exports.RegionInstanceTemplatesClient = RegionInstanceTemplatesClient;
const RegionNetworkEndpointGroupsClient = v1.RegionNetworkEndpointGroupsClient;
exports.RegionNetworkEndpointGroupsClient = RegionNetworkEndpointGroupsClient;
const RegionNetworkFirewallPoliciesClient = v1.RegionNetworkFirewallPoliciesClient;
exports.RegionNetworkFirewallPoliciesClient = RegionNetworkFirewallPoliciesClient;
const RegionNotificationEndpointsClient = v1.RegionNotificationEndpointsClient;
exports.RegionNotificationEndpointsClient = RegionNotificationEndpointsClient;
const RegionOperationsClient = v1.RegionOperationsClient;
exports.RegionOperationsClient = RegionOperationsClient;
const RegionsClient = v1.RegionsClient;
exports.RegionsClient = RegionsClient;
const RegionSecurityPoliciesClient = v1.RegionSecurityPoliciesClient;
exports.RegionSecurityPoliciesClient = RegionSecurityPoliciesClient;
const RegionSslCertificatesClient = v1.RegionSslCertificatesClient;
exports.RegionSslCertificatesClient = RegionSslCertificatesClient;
const RegionSslPoliciesClient = v1.RegionSslPoliciesClient;
exports.RegionSslPoliciesClient = RegionSslPoliciesClient;
const RegionTargetHttpProxiesClient = v1.RegionTargetHttpProxiesClient;
exports.RegionTargetHttpProxiesClient = RegionTargetHttpProxiesClient;
const RegionTargetHttpsProxiesClient = v1.RegionTargetHttpsProxiesClient;
exports.RegionTargetHttpsProxiesClient = RegionTargetHttpsProxiesClient;
const RegionTargetTcpProxiesClient = v1.RegionTargetTcpProxiesClient;
exports.RegionTargetTcpProxiesClient = RegionTargetTcpProxiesClient;
const RegionUrlMapsClient = v1.RegionUrlMapsClient;
exports.RegionUrlMapsClient = RegionUrlMapsClient;
const ReservationsClient = v1.ReservationsClient;
exports.ReservationsClient = ReservationsClient;
const ResourcePoliciesClient = v1.ResourcePoliciesClient;
exports.ResourcePoliciesClient = ResourcePoliciesClient;
const RoutersClient = v1.RoutersClient;
exports.RoutersClient = RoutersClient;
const RoutesClient = v1.RoutesClient;
exports.RoutesClient = RoutesClient;
const SecurityPoliciesClient = v1.SecurityPoliciesClient;
exports.SecurityPoliciesClient = SecurityPoliciesClient;
const ServiceAttachmentsClient = v1.ServiceAttachmentsClient;
exports.ServiceAttachmentsClient = ServiceAttachmentsClient;
const SnapshotsClient = v1.SnapshotsClient;
exports.SnapshotsClient = SnapshotsClient;
const SslCertificatesClient = v1.SslCertificatesClient;
exports.SslCertificatesClient = SslCertificatesClient;
const SslPoliciesClient = v1.SslPoliciesClient;
exports.SslPoliciesClient = SslPoliciesClient;
const SubnetworksClient = v1.SubnetworksClient;
exports.SubnetworksClient = SubnetworksClient;
const TargetGrpcProxiesClient = v1.TargetGrpcProxiesClient;
exports.TargetGrpcProxiesClient = TargetGrpcProxiesClient;
const TargetHttpProxiesClient = v1.TargetHttpProxiesClient;
exports.TargetHttpProxiesClient = TargetHttpProxiesClient;
const TargetHttpsProxiesClient = v1.TargetHttpsProxiesClient;
exports.TargetHttpsProxiesClient = TargetHttpsProxiesClient;
const TargetInstancesClient = v1.TargetInstancesClient;
exports.TargetInstancesClient = TargetInstancesClient;
const TargetPoolsClient = v1.TargetPoolsClient;
exports.TargetPoolsClient = TargetPoolsClient;
const TargetSslProxiesClient = v1.TargetSslProxiesClient;
exports.TargetSslProxiesClient = TargetSslProxiesClient;
const TargetTcpProxiesClient = v1.TargetTcpProxiesClient;
exports.TargetTcpProxiesClient = TargetTcpProxiesClient;
const TargetVpnGatewaysClient = v1.TargetVpnGatewaysClient;
exports.TargetVpnGatewaysClient = TargetVpnGatewaysClient;
const UrlMapsClient = v1.UrlMapsClient;
exports.UrlMapsClient = UrlMapsClient;
const VpnGatewaysClient = v1.VpnGatewaysClient;
exports.VpnGatewaysClient = VpnGatewaysClient;
const VpnTunnelsClient = v1.VpnTunnelsClient;
exports.VpnTunnelsClient = VpnTunnelsClient;
const ZoneOperationsClient = v1.ZoneOperationsClient;
exports.ZoneOperationsClient = ZoneOperationsClient;
const ZonesClient = v1.ZonesClient;
exports.ZonesClient = ZonesClient;
exports.default = {
    v1,
    v1small,
    AcceleratorTypesClient,
    AddressesClient,
    AutoscalersClient,
    BackendBucketsClient,
    BackendServicesClient,
    DisksClient,
    DiskTypesClient,
    ExternalVpnGatewaysClient,
    FirewallPoliciesClient,
    FirewallsClient,
    ForwardingRulesClient,
    GlobalAddressesClient,
    GlobalForwardingRulesClient,
    GlobalNetworkEndpointGroupsClient,
    GlobalOperationsClient,
    GlobalOrganizationOperationsClient,
    GlobalPublicDelegatedPrefixesClient,
    HealthChecksClient,
    ImageFamilyViewsClient,
    ImagesClient,
    InstanceGroupManagersClient,
    InstanceGroupsClient,
    InstancesClient,
    InstanceTemplatesClient,
    InterconnectAttachmentsClient,
    InterconnectLocationsClient,
    InterconnectRemoteLocationsClient,
    InterconnectsClient,
    LicenseCodesClient,
    LicensesClient,
    MachineImagesClient,
    MachineTypesClient,
    NetworkAttachmentsClient,
    NetworkEdgeSecurityServicesClient,
    NetworkEndpointGroupsClient,
    NetworkFirewallPoliciesClient,
    NetworksClient,
    NodeGroupsClient,
    NodeTemplatesClient,
    NodeTypesClient,
    PacketMirroringsClient,
    ProjectsClient,
    PublicAdvertisedPrefixesClient,
    PublicDelegatedPrefixesClient,
    RegionAutoscalersClient,
    RegionBackendServicesClient,
    RegionCommitmentsClient,
    RegionDisksClient,
    RegionDiskTypesClient,
    RegionHealthChecksClient,
    RegionHealthCheckServicesClient,
    RegionInstanceGroupManagersClient,
    RegionInstanceGroupsClient,
    RegionInstancesClient,
    RegionInstanceTemplatesClient,
    RegionNetworkEndpointGroupsClient,
    RegionNetworkFirewallPoliciesClient,
    RegionNotificationEndpointsClient,
    RegionOperationsClient,
    RegionsClient,
    RegionSecurityPoliciesClient,
    RegionSslCertificatesClient,
    RegionSslPoliciesClient,
    RegionTargetHttpProxiesClient,
    RegionTargetHttpsProxiesClient,
    RegionTargetTcpProxiesClient,
    RegionUrlMapsClient,
    ReservationsClient,
    ResourcePoliciesClient,
    RoutersClient,
    RoutesClient,
    SecurityPoliciesClient,
    ServiceAttachmentsClient,
    SnapshotsClient,
    SslCertificatesClient,
    SslPoliciesClient,
    SubnetworksClient,
    TargetGrpcProxiesClient,
    TargetHttpProxiesClient,
    TargetHttpsProxiesClient,
    TargetInstancesClient,
    TargetPoolsClient,
    TargetSslProxiesClient,
    TargetTcpProxiesClient,
    TargetVpnGatewaysClient,
    UrlMapsClient,
    VpnGatewaysClient,
    VpnTunnelsClient,
    ZoneOperationsClient,
    ZonesClient,
};
const protos = require("../protos/protos");
exports.protos = protos;
//# sourceMappingURL=index.js.map